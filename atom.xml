<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[読書帳]]></title>
  <link href="http://delta2323.github.io/atom.xml" rel="self"/>
  <link href="http://delta2323.github.io/"/>
  <updated>2014-08-10T13:09:52+09:00</updated>
  <id>http://delta2323.github.io/</id>
  <author>
    <name><![CDATA[Kenta OONO]]></name>
    <email><![CDATA[k.oono.delta@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[記事の公開日時を最終更新日時にする（仮）]]></title>
    <link href="http://delta2323.github.io/blog/2014/08/10/change-to-update-time/"/>
    <updated>2014-08-10T11:49:00+09:00</updated>
    <id>http://delta2323.github.io/blog/2014/08/10/change-to-update-time</id>
    <content type="html"><![CDATA[<p>元々のデフォルトだとブログ記事の投稿時間は下書きを作成した時間だったのだけれど、記事を書いた後何日か寝かせた後に公開する事が結構あるので、公開した時を時刻を投稿時間にしたいと思い変更した。</p>

<h2 id="section">参考にしたサイト</h2>

<h4 id="octpress--github-pages">Octpress + Github Pagesの連携について</h4>

<ul>
  <li><a href="https://gist.github.com/shimotori/5325720">shimotori / article.html</a></li>
</ul>

<p>上記のgistで書かれている通り行い、うまく行きました。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopressの記事に「続きを読む」を追加する]]></title>
    <link href="http://delta2323.github.io/blog/2014/08/10/more/"/>
    <updated>2014-08-10T11:42:00+09:00</updated>
    <id>http://delta2323.github.io/blog/2014/08/10/more</id>
    <content type="html"><![CDATA[<p>Octopressの記事に「続きを読む」を追加するには、表示させたい箇所に <code>&lt;!-- more --&gt;</code>を追加すれば良い。</p>

<h2 id="section">参考</h2>

<ul>
  <li><a href="http://octopress.org/docs/blogging/">Octopress</a></li>
</ul>

<p>ここに書いてある通りでうまくいった。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[記事をデフォルトでは非公開設定にする]]></title>
    <link href="http://delta2323.github.io/blog/2014/08/10/default-unpublised/"/>
    <updated>2014-08-10T11:42:00+09:00</updated>
    <id>http://delta2323.github.io/blog/2014/08/10/default-unpublised</id>
    <content type="html"><![CDATA[<p>デフォルトでは記事は非公開設定にしておきたい。その方法を調べた。</p>

<!-- more -->

<p>調べた所、同じ事を考えている方がいて、
<code>rake new_post["blog_title"]</code>で新規記事を作成した時に、ヘッダーに<code>published: false</code>をつける方法を紹介していた（[Nukino’s memorandum]より）。
この方はvimのプラグインとしてそれを実現している。</p>

<p>前回<code>rake publish_draft</code>コマンドを追加した方法にヒントを得て、自分は<code>rake new_post</code>コマンドに直接埋め込む事にした。</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
</pre></td><td class="code"><pre><code class=""><span class="line">$ git diff Rakefile
</span><span class="line">@@ -111,6 +111,7 @@ task :new_post, :title do |t, args|
</span><span class="line">     post.puts "date: #{Time.now.strftime('%Y-%m-%d %H:%M:%S %z')}"
</span><span class="line">     post.puts "comments: true"
</span><span class="line">     post.puts "categories: "
</span><span class="line">+    post.puts "published: false"
</span><span class="line">     post.puts "---"
</span><span class="line">   end
</span><span class="line"> end</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>今回の記事もこの方法で新規作成し、ヘッダーに「published: false」が追加された事を確認した。</p>

<ul>
  <li><a href="http://nukino.github.io/blog/2012/01/12/Octopress/">Nukino’s memorandum</a></li>
</ul>

<p>vimのプラグインを用いて新規記事にデフォルト<code>published: false</code>をつける方法。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[記事の下書きの管理]]></title>
    <link href="http://delta2323.github.io/blog/2014/01/26/manage-draft/"/>
    <updated>2014-01-26T10:42:22+09:00</updated>
    <id>http://delta2323.github.io/blog/2014/01/26/manage-draft</id>
    <content type="html"><![CDATA[<p>普段のメールでもそうなのだけれど、緊急のものでなければ文章を書いた後にそれを「寝かし」てから公開する事が多い
（なので、このブログでも日付が公開日時より大分前になってしまう記事が今後増えるような気がする）。
Octopressで下書きってどう管理するのが良いのだろうと思い、調べてみた。</p>

<!-- more -->

<p>まず、記事を公開しないようにするには、記事のヘッダー部分に<code>published: false</code>と書けば十分の様子（[Octopress]より）。
この状態で通常の通り</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class=""><span class="line">$ rake exec generate
</span><span class="line">$ rake exec gen_deploy</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>を行うと、該当の記事は非公開のままデプロイされる。</p>

<p>一方、以下の手順で記事を手元でプレビューした際には、<code>publised: false</code>の有無にかかわらず記事が表示される。</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class=""><span class="line">$ rake exec generate
</span><span class="line">$ rake exec preview</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>「えっ？」と思ったけれど、確かに記事作成途中にどのように表示されるかは確認したいし、それがプレビューの目的だからそりゃそうだと納得した
しかし、一方でプレビューだけでは、どの記事が非公開設定となっているかがわからないので、誤って非公開の記事を公開してしまうかもと思った。</p>

<p>そこで探した所、下書き状態の記事を一覧表示し、書き終わった記事を公開するためのRakeコマンド<code>publish_draft</code>を作成した人を発見した（[Chatswood]より）。
具体的にはRakefileにリンク先のスクリプトを追加し、コマンドラインから<code>rake publish_draft</code>を実行すれば良い。
公開設定されていない記事が一覧表示された。
今回の記事もこのワークフローで公開している（予定）。</p>

<h2 id="section">参考</h2>

<ul>
  <li><a href="http://octopress.org/docs/blogging/">Octopress</a></li>
</ul>

<p><code>published: false</code>について、ここに書いてある通りでうまくいった。</p>

<ul>
  <li><a href="http://blog.chatswood.org.uk/blog/2012/10/21/working-with-drafts-in-octopress/">Chatswood</a></li>
</ul>

<p><code>rake publish_draft</code>について、ここに書いてある通りでうまくいった。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[NIPS2013読み会で発表しました]]></title>
    <link href="http://delta2323.github.io/blog/2014/01/25/nips-reading/"/>
    <updated>2014-01-25T01:49:35+09:00</updated>
    <id>http://delta2323.github.io/blog/2014/01/25/nips-reading</id>
    <content type="html"><![CDATA[<p>1/23に開催されたNIPS2013読み会に詠み人として参加しました。
主催者の<a href="https://twitter.com/sla">@sla</a>さんをはじめ、参加していただいた皆さんありがとうございました。
資料はSlideShareで公開しています（SlideShare上だと日本語部分が文字化けしてしまっていますが、ダウンロードすれば直るはずです）。</p>

<iframe src="http://www.slideshare.net/slideshow/embed_code/30337341 " width="595" height="446" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:1px solid #CCC;border-width:1px 1px 0;margin-bottom:5px" allowfullscreen=""></iframe>

<p>自分が発表したのは”Inverse Density as an Inverse Problem: The Fredholm Equation Approach”という密度比推定に関する論文です。
密度比推定の問題を第1種Fredholm方程式という良く知られた積分方程式に変形し、やはり良く知られたTikhonov-Phillips正則化という方法で得られる値を近似解として用いています。</p>

<p>発表資料中でも挙げていますが、密度比推定全般に関する説明は東工大杉山先生の2012年のMLSSでの講演資料が非常に詳しく、この分野を概観する事が出来ます。
今回の発表の準備でも大変参考にさせていただきました。</p>

<h2 id="section">関連サイト</h2>

<ul>
  <li>
    <p><a href="http://connpass.com/event/4728/">NIPS2013読み会</a>(connpass)</p>
  </li>
  <li>
    <p><a href="http://togetter.com/li/620871">NIPS2013読み会</a>(Togetter)</p>
  </li>
</ul>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[GWAS, Post-GWASに関する資料を公開しました]]></title>
    <link href="http://delta2323.github.io/blog/2014/01/21/gwas-phewas/"/>
    <updated>2014-01-21T09:04:37+09:00</updated>
    <id>http://delta2323.github.io/blog/2014/01/21/gwas-phewas</id>
    <content type="html"><![CDATA[<p>先週の会社のセミナーでGWASとPost-GWASについて、特にPhe-WASについて話をしました。その資料を公開します。</p>

<iframe src="http://www.slideshare.net/slideshow/embed_code/30240670 " width="595" height="446" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:1px solid #CCC;border-width:1px 1px 0;margin-bottom:5px" allowfullscreen=""></iframe>

<p>海外文献紹介として「Phe-WAS」という言葉を挙げている記事はいくつかありますが、PheWASの手法や利点・欠点について日本語で解説した資料はなかなかなく、かなり詳しい方に入ると思います。海外文献ではPhe-WASを用いて実際に行った網羅的探索を報告した論文の他にも、以下の2記事がおすすめです。</p>

<ul>
  <li><a href="http://www.nytimes.com/2013/11/28/science/linking-genes-to-diseases-by-sifting-through-electronic-medical-records.html?_r=0">Linking Genes to Diseases by Sifting Through Electronic Medical Records</a> (New York Times 2013年11月28日)</li>
</ul>

<p>Phe-WASに関するNew York Timesの記事、提唱者のJoshua氏がインタビューされています。</p>

<ul>
  <li><a href="http://www.tcpinnovations.com/drugbaron/phewas-the-tool-thats-revolutionizing-drug-development-that-youve-likely-never-heard-of/">PheWAS – the tool that’s revolutionizing drug development that you’ve likely never heard of</a> (Drug Baron 2014年1月3日)</li>
</ul>

<p>PheWASの利点・欠点を特に創薬の観点から詳しく議論しています。非常に参考になりました。</p>

<ul>
  <li><a href="https://github.com/petehamilton/Octopress-Slideshare-Plugin">Octopress-Slideshare-Plugin</a></li>
</ul>

<p>OctopressへのSlideShareの埋め込みにはこちらのプラグインを使用しました。README.mdのやり方をそのまま実行して出来ました</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[テスト投稿]]></title>
    <link href="http://delta2323.github.io/blog/2014/01/12/first-post/"/>
    <updated>2014-01-12T13:14:10+09:00</updated>
    <id>http://delta2323.github.io/blog/2014/01/12/first-post</id>
    <content type="html"><![CDATA[<p>今年はきちんとものを書こうと決めたので、個人サイトとブログの整備を行う。
個人サイトは昔作ったものがあったのでそれを掘り出して利用する。
ブログについては調べてみると、Octpress + Github PagesがMarkDownも使えて便利そうなのでこれを採用しようと思う。</p>

<h2 id="section">数式の表示</h2>

<script type="math/tex; mode=display">% &lt;![CDATA[

\begin{align*}
  & \phi(x,y) = \phi \left(\sum_{i=1}^n x_ie_i, \sum_{j=1}^n y_je_j \right)
  = \sum_{i=1}^n \sum_{j=1}^n x_i y_j \phi(e_i, e_j) = \\
  & (x_1, \ldots, x_n) \left( \begin{array}{ccc}
      \phi(e_1, e_1) & \cdots & \phi(e_1, e_n) \\
      \vdots & \ddots & \vdots \\
      \phi(e_n, e_1) & \cdots & \phi(e_n, e_n)
    \end{array} \right)
  \left( \begin{array}{c}
      y_1 \\
      \vdots \\
      y_n
    \end{array} \right)
\end{align*}
 %]]&gt;</script>

<h2 id="section-1">参考にしたサイト</h2>

<h4 id="octpress--github-pages">Octpress + Github Pagesの連携について</h4>

<ul>
  <li><a href="http://blog.glidenote.com/blog/2011/11/07/install-octopress-on-github/">Glide Note</a></li>
</ul>

<p>Rubyの管理はrbenvで既に行っていたので、rvmは使用しなかった。</p>

<h4 id="section-2">数式の表示について</h4>

<ul>
  <li><a href="http://www.idryman.org/blog/2012/03/10/writing-math-equations-on-octopress/">Carpe diem (Felix’s blog)</a></li>
</ul>

<p>ここに書いている通りに行ってうまくいった。</p>
]]></content>
  </entry>
  
</feed>
