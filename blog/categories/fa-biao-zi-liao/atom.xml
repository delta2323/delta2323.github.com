<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: 発表資料 | 読書帳]]></title>
  <link href="http://delta2323.github.io/blog/categories/fa-biao-zi-liao/atom.xml" rel="self"/>
  <link href="http://delta2323.github.io/"/>
  <updated>2014-11-04T23:22:08+09:00</updated>
  <id>http://delta2323.github.io/</id>
  <author>
    <name><![CDATA[Kenta OONO]]></name>
    <email><![CDATA[k.oono.delta@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[PFIセミナーで実験プログラム開発方法論について話しました]]></title>
    <link href="http://delta2323.github.io/blog/2014/10/09/experiment-oriented-program/"/>
    <updated>2014-10-09T00:06:00+09:00</updated>
    <id>http://delta2323.github.io/blog/2014/10/09/experiment-oriented-program</id>
    <content type="html"><![CDATA[<p>先日9月25日の社内セミナーにて「実験プログラム開発方法論」というタイトルで発表を行いました。
発表資料はSlideShareで公開しています。当日の発表はUstreamのPFIチャンネルから視聴可能です。
また、発表に関連する資料群（デモのレポジトリ・実験メモ・発表に関連して書いた文書）などをgoogle docsで公開しています。</p>

<ul>
  <li><a href="http://www.ustream.tv/channel/pfi-show">PFI Show(Ustream)</a></li>
  <li><a href="https://docs.google.com/document/d/1PB6qHAt2Lyvm_AUXjiAjOt1v9BgbATnKtb38buwlOZI">20140925PFIセミナー関連資料置き場</a></li>
</ul>

<p><iframe src="http://www.slideshare.net/slideshow/embed_code/39497239 " width="595" height="446" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:1px solid #CCC;border-width:1px 1px 0;margin-bottom:5px" allowfullscreen></iframe> </p>

<p>以下では発表内容の簡単なまとめ、発表の補足、実験プログラムについて考える経緯について、随筆的に書いていこうと思います。</p>

<!-- more -->

<h2 id="section">発表内容について</h2>

<p>実験プログラムは造語で、（科学）実験を行うために開発するソフトウェアを意図しています。
発表では、実験プログラムが持つ特徴・典型パターン・開発上の課題とその解決策（案）について話しました。
一部まとめの繰り返しになりますが、今回の発表での要旨・主張は以下の通りです。</p>

<ul>
  <li>
    <p>実験プログラム開発にはソフトウェアの開発の方法論が有効。ただし、実験プログラムの開発に適した形で適用する事が必要。</p>
  </li>
  <li>
    <p>実験プログラムはそれ単体として存在するのではなく、それらへの入力（データセット・設定ファイル）・出力（実験結果・ログ）・実験手順（実験手順プログラム・ドキュメント）・環境など周辺に存在するモジュールにも依存しており、実験プログラムと同様に管理・開発が必要である。</p>
  </li>
  <li>
    <p>実験プログラムでは実験結果を出すことの優先度が高い点が通常のソフトウェアの開発と異なり、ソフトウェアの品質にかけるコスト（リファクタリング・バージョン管理・関数の汎用性）との優先度の問題がしばしば発生する。</p>
  </li>
  <li>
    <p>実験結果の再現性を保ち、結果を後になって有効活用するには、生成方法と生成結果はそれらを独立して管理するだけではなく、それらの対応付けを併せて管理する事が重要。</p>
  </li>
</ul>

<h2 id="section-1">発表の補足</h2>

<ul>
  <li>
    <p>発表中で「パイプラインは実験プログラム固有」という旨の内容を話したのですが、通常のソフトウェア開発でも前のビルド結果を別のプログラムのビルドに利用するということは当たり前のように行いますので、あまり実験プログラムに固有というのは適切ではなかったです。</p>
  </li>
  <li>
    <p>この発表を考えた当初はもう少し細かなノウハウについてお話をすることを想定していましたが、いざ資料にまとめてみると、そこに至るまでの前提・導入の話が予想以上にあることがわかり、結果的にそれらについてはほとんど触れられませんでした。それらについては、以下の文書も参考にして下さい（前述の資料置き場にもリンクはあります）。</p>

    <ul>
      <li><a href="https://docs.google.com/document/d/11Y3NYVCHilCRT-xyGEYuy8EphOyouc_iWOqO_ZiDLX0">git, mafを用いた実験プログラム開発方法論</a></li>
    </ul>
  </li>
  <li>
    <p>今回は実験結果を得ることを目的としたプログラムが興味対象で、そのプログラムを第三者が利用する事はあまり想定していませんでした。しかしそ、libsvm/liblinearやmecabなどのツールによって関連する分野の発展が加速された事を考えると、ソフトウェアとして第三者に利用されることを想定した実験プログラムを今回の話から除いてしまったのは話半分と言わざるを得ないと思います。これらについてはまた別の問題として気になる話ではあります。</p>
  </li>
</ul>

<h2 id="section-2">発表のきっかけ</h2>

<p>（書いていたら思ったより長文になってしまいました）</p>

<p>今回このような発表を行ったきっかけは、自分がこういう方法論を欲していたというのがあります。
仕事やプライベートで論文を読んだり、アルゴリズムを試しに書く事が多いのですが、アルゴリズムそのものの他に効果的なアルゴリズムを開発する方法も自然と問題意識として持っていました。</p>

<p>周りの紹介でソフトウェア開発という分野を知り、関連する書籍やブログなどを読んでみると、コードを書いている時に感じる疑問にまさに答えてくれるようなものが多数でした。例えば、自分がこの会社に来て最初に読んだ本の一つがClean Codeという品質の高いコードを書くための技術についての本です。
我流でコードを書いていた時に比べると効率や品質は大分意識できるようになりました（本当にきちんと書けているかどうかは周りに聞いてみないとわからないですが…）。</p>

<p>一方で、これらの手法のうち幾つかは自分のケースにうまく適用できないと感じる事もありました。
もちろん自分が手法を十分マスターしていない事も理由の一つだと思いますが、
少し身の程をわきまえずに大胆な仮説を立てて、自分が開発しているプログラムは一般のソフトウェアとは要求が異なる部分もあるのではないかと考えてみることにしました。</p>

<p>改めて思い返してみると、公開された場にある実験プログラム開発のノウハウというのはそれほど多くはないように思います。
今回自分が紹介したようなジレンマは実験プログラムを開発していれば自然と発生する問題のはずなので、機械学習を研究するグループがこのようなノウハウを持っていないとは考えづらいです。
おそらく各研究グループの中でこのようなノウハウは秘伝のタレとして伝えられたり、仲間同士で情報交換されており、外部になかなか現れていないだけだと思います。</p>

<p>また、実験プログラム開発上の課題を課題に思うのは、研究開発という一部の職種の中で、さらにプログラム開発が研究に伴う一部の方々だけであるはずなので、ニーズがなかったとしても不思議ではありません。
実際前述の「git, mafを用いた実験プログラム開発方法」の文書も、もともとはノウハウを社内の他のメンバーに共有しようという動機で書き始めました。</p>

<p>もちろん公開の場でのノウハウの共有が全くないとは言えません。例えば機械学習系のライブラリのレポジトリのログで開発の過程を追ったり、githubのissueやgoogle groupではそのようなノウハウが議論される事がしばしばあります。しかし、埋もれていて見えていないノウハウの蓄積というのはもっとあるはずだと推測しています。</p>

<p>ノウハウを方法論として確立する事はメリットは大きいと考えています（少なくとも実験プログラムを書く人間、というか自分はほしいです）。
例えば以下の様な効果を期待しています</p>

<ul>
  <li>異なる研究グループの間で共通言語ができ、ノウハウのスムーズな共有・交換につながる</li>
  <li>開発ノウハウを身につけることで、その部分で悩むことが少なくなれば、開発内容そのものにリソースを集中する事ができる</li>
  <li>方法論としてまとめる事で何も意識せずに開発をしていたら3年かかるようなノウハウの修得が半年でできれば、残った時間をアルゴリズムの研究に費すことができる</li>
</ul>

<p>方法論を確立することの重要性を強調したいという意図があり、今回の発表では「実験プログラム”方法論”」などという大それたタイトルを付けました。</p>

<p>今回残念だったのは、あまりサーベイや知り合いへのインタビューができず、世の中でのこのような実験プログラムの開発の現状をあまり把握できなかったということです。
おそらく世の中は自分が話した内容よりももっと進んでいて、「こんなの知ってる」と言う感想を持っている方も多くいるのではないかと思います。
自分の所ではこうしている、もっとここはこう工夫できるのではないかなどの感想がありましたら是非いただければと思います。
今回の発表が実験プログラム開発の議論のきっかけになれば幸いです。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[NIPS2013読み会で発表しました]]></title>
    <link href="http://delta2323.github.io/blog/2014/01/25/nips-reading/"/>
    <updated>2014-01-25T01:49:35+09:00</updated>
    <id>http://delta2323.github.io/blog/2014/01/25/nips-reading</id>
    <content type="html"><![CDATA[<p>1/23に開催されたNIPS2013読み会に詠み人として参加しました。
主催者の<a href="https://twitter.com/sla">@sla</a>さんをはじめ、参加していただいた皆さんありがとうございました。
資料はSlideShareで公開しています（SlideShare上だと日本語部分が文字化けしてしまっていますが、ダウンロードすれば直るはずです）。</p>

<p><iframe src="http://www.slideshare.net/slideshow/embed_code/30337341 " width="595" height="446" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:1px solid #CCC;border-width:1px 1px 0;margin-bottom:5px" allowfullscreen></iframe> </p>

<p>自分が発表したのは”Inverse Density as an Inverse Problem: The Fredholm Equation Approach”という密度比推定に関する論文です。
密度比推定の問題を第1種Fredholm方程式という良く知られた積分方程式に変形し、やはり良く知られたTikhonov-Phillips正則化という方法で得られる値を近似解として用いています。</p>

<p>発表資料中でも挙げていますが、密度比推定全般に関する説明は東工大杉山先生の2012年のMLSSでの講演資料が非常に詳しく、この分野を概観する事が出来ます。
今回の発表の準備でも大変参考にさせていただきました。</p>

<h2 id="section">関連サイト</h2>

<ul>
  <li>
    <p><a href="http://connpass.com/event/4728/">NIPS2013読み会</a>(connpass)</p>
  </li>
  <li>
    <p><a href="http://togetter.com/li/620871">NIPS2013読み会</a>(Togetter)</p>
  </li>
</ul>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[GWAS, Post-GWASに関する資料を公開しました]]></title>
    <link href="http://delta2323.github.io/blog/2014/01/21/gwas-phewas/"/>
    <updated>2014-01-21T09:04:37+09:00</updated>
    <id>http://delta2323.github.io/blog/2014/01/21/gwas-phewas</id>
    <content type="html"><![CDATA[<p>先週の会社のセミナーでGWASとPost-GWASについて、特にPhe-WASについて話をしました。その資料を公開します。</p>

<p><iframe src="http://www.slideshare.net/slideshow/embed_code/30240670 " width="595" height="446" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:1px solid #CCC;border-width:1px 1px 0;margin-bottom:5px" allowfullscreen></iframe> </p>

<p>海外文献紹介として「Phe-WAS」という言葉を挙げている記事はいくつかありますが、PheWASの手法や利点・欠点について日本語で解説した資料はなかなかなく、かなり詳しい方に入ると思います。海外文献ではPhe-WASを用いて実際に行った網羅的探索を報告した論文の他にも、以下の2記事がおすすめです。</p>

<ul>
  <li><a href="http://www.nytimes.com/2013/11/28/science/linking-genes-to-diseases-by-sifting-through-electronic-medical-records.html?_r=0">Linking Genes to Diseases by Sifting Through Electronic Medical Records</a> (New York Times 2013年11月28日)</li>
</ul>

<p>Phe-WASに関するNew York Timesの記事、提唱者のJoshua氏がインタビューされています。</p>

<ul>
  <li><a href="http://www.tcpinnovations.com/drugbaron/phewas-the-tool-thats-revolutionizing-drug-development-that-youve-likely-never-heard-of/">PheWAS – the tool that’s revolutionizing drug development that you’ve likely never heard of</a> (Drug Baron 2014年1月3日)</li>
</ul>

<p>PheWASの利点・欠点を特に創薬の観点から詳しく議論しています。非常に参考になりました。</p>

<ul>
  <li><a href="https://github.com/petehamilton/Octopress-Slideshare-Plugin">Octopress-Slideshare-Plugin</a></li>
</ul>

<p>OctopressへのSlideShareの埋め込みにはこちらのプラグインを使用しました。README.mdのやり方をそのまま実行して出来ました</p>
]]></content>
  </entry>
  
</feed>
